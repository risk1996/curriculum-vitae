---
import { twMerge } from "tailwind-merge";

interface Props {
  class?: string;
}
---

<div class={twMerge("embla relative overflow-hidden", Astro.props.class)}>
  <slot />
</div>

<script>
  import EmblaCarousel from "embla-carousel";
  import { WheelGesturesPlugin } from "embla-carousel-wheel-gestures";

  const nodes = document.querySelectorAll<HTMLElement>(".embla");

  for (const root of nodes) {
    const viewport = root.querySelector<HTMLElement>(".embla__viewport");
    const carousel = EmblaCarousel(
      viewport ?? root,
      { containScroll: false, skipSnaps: true },
      [WheelGesturesPlugin()],
    );

    const prev = root.querySelector(".embla__prev");
    if (prev) {
      prev.addEventListener("click", () => carousel.scrollPrev());
      const updatePrevActive = () =>
        carousel.canScrollPrev()
          ? prev.removeAttribute("disabled")
          : prev.setAttribute("disabled", "disabled");
      carousel.on("select", updatePrevActive);
      carousel.on("init", updatePrevActive);
      carousel.on("reInit", updatePrevActive);
      carousel.on("destroy", () => prev.removeAttribute("disabled"));
    }

    const next = root.querySelector(".embla__next");
    if (next) {
      next.addEventListener("click", () => carousel.scrollNext());
      const updateNextActive = () =>
        carousel.canScrollNext()
          ? next.removeAttribute("disabled")
          : next.setAttribute("disabled", "disabled");
      carousel.on("select", updateNextActive);
      carousel.on("init", updateNextActive);
      carousel.on("reInit", updateNextActive);
      carousel.on("destroy", () => next.removeAttribute("disabled"));
    }
  }
</script>
